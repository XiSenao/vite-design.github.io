(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{277:function(t,s,a){t.exports=a.p+"assets/img/network.52ecb408.png"},307:function(t,s,a){"use strict";a.r(s);var e=a(10),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"学习准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学习准备"}},[t._v("#")]),t._v(" 学习准备")]),t._v(" "),s("p",[t._v("在进行正式的源码阅读之前我们需要做以下准备")]),t._v(" "),s("h2",{attrs:{id:"前置知识点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前置知识点"}},[t._v("#")]),t._v(" 前置知识点")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://koa.bootcss.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("koa"),s("OutboundLink")],1),t._v(" Node.js 框架"),s("br"),t._v(" "),s("a",{attrs:{href:"http://docs.breword.com/evanw-esbuild/#documentation-anchor",target:"_blank",rel:"noopener noreferrer"}},[t._v("esbuild"),s("OutboundLink")],1),t._v(" 编译 TS -> JS"),s("br"),t._v(" "),s("a",{attrs:{href:"https://www.rollupjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("rollup"),s("OutboundLink")],1),t._v(" 用于生产环境代码打包工具")]),t._v(" "),s("h2",{attrs:{id:"本地项目准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地项目准备"}},[t._v("#")]),t._v(" 本地项目准备")]),t._v(" "),s("p",[t._v("需要在本地准备 Vite 以及 Vite   创建的默认项目")]),t._v(" "),s("h3",{attrs:{id:"clone-vite-到本地"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clone-vite-到本地"}},[t._v("#")]),t._v(" Clone Vite 到本地")]),t._v(" "),s("p",[t._v("可以直接 Clone Vite 的原仓库也可以自己先 fork 一份再 Clone")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/zhangyuang/vite.git\n")])])]),s("h3",{attrs:{id:"使用-vite-创建默认项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-vite-创建默认项目"}},[t._v("#")]),t._v(" 使用 Vite 创建默认项目")]),t._v(" "),s("p",[t._v("使用 Vite 脚手架来创建默认的 Vue 模版项目")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" init vite-app vite_test\n")])])]),s("h3",{attrs:{id:"link-vite"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#link-vite"}},[t._v("#")]),t._v(" link Vite")]),t._v(" "),s("p",[t._v("link 本地的 Vite 到项目依赖")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" vite "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" dev\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新开另一个终端窗口执行 yarn link 命令")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" vite_test "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v(" vite\n")])])]),s("p",[t._v("现在我们可以直接修改 Vite src 目录下的代码并且实时验证了")]),t._v(" "),s("h2",{attrs:{id:"目录结构分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录结构分析"}},[t._v("#")]),t._v(" 目录结构分析")]),t._v(" "),s("p",[t._v("让我们来分析一下 Vite 源码目录中的各个文件夹的作用")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ tree "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-L")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-I")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node_modules'")]),t._v(" ./src\n\n├── client "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 客户端运行代码，主要是客户端的 socket 通信以及 HMR 相关")]),t._v("\n│   ├── client.ts\n│   ├── env.d.ts\n│   ├── tsconfig.json\n│   └── vueJsxCompat.ts\n├── hmrPayload.ts "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# HMR 类型定义")]),t._v("\n└── "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 服务端运行代码")]),t._v("\n    ├── build "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Vite build 命令运行代码")]),t._v("\n    ├── cli.ts\n    ├── config.ts\n    ├── esbuildService.ts "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# esbuild 相关代码")]),t._v("\n    ├── index.ts\n    ├── optimizer "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 预优化")]),t._v("\n    ├── resolver.ts "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 模块加载逻辑")]),t._v("\n    ├── server "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Vite (serve) 命令运行代码")]),t._v("\n    ├── transform.ts\n    ├── tsconfig.json\n    └── utils\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" directories, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" files\n")])])]),s("h2",{attrs:{id:"启动项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动项目"}},[t._v("#")]),t._v(" 启动项目")]),t._v(" "),s("p",[t._v("启动 vite_test，观察 main.js 文件")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run dev\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// main.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createApp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" App "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./App.vue'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./index.css'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createApp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:a(277),alt:""}})]),t._v(" "),s("p",[t._v("通过观察我们可以发现，启动本地服务后浏览器加载的代码与我们本地的代码引用依赖路径不一致。这也是文档里所提到的 Vite 支持裸模块的加载。正如文档所提到的 Vite 在本地开发时会使用 Koa 来启动服务，并且在每个类型的文件到达浏览器之前会根据文件的类型做不同的 transfrom 处理。这也是的 Vite 核心机制之一的模块加载解析逻辑。")])])}),[],!1,null,null,null);s.default=n.exports}}]);